<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: awk | Andrew's Blog]]></title>
  <link href="http://andrew-home.ga/blog/categories/awk/atom.xml" rel="self"/>
  <link href="http://andrew-home.ga/"/>
  <updated>2014-07-05T18:23:35+08:00</updated>
  <id>http://andrew-home.ga/</id>
  <author>
    <name><![CDATA[Andrew]]></name>
    <email><![CDATA[gzdujunchao@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[awk程序介绍]]></title>
    <link href="http://andrew-home.ga/blog/2014/04/07/awkcheng-xu-jie-shao/"/>
    <updated>2014-04-07T22:22:31+08:00</updated>
    <id>http://andrew-home.ga/blog/2014/04/07/awkcheng-xu-jie-shao</id>
    <content type="html"><![CDATA[<p><a href="/files/%E4%B8%AD%E7%A0%94%E9%99%A2%E8%AE%A1%E7%AE%97%E4%B8%AD%E5%BF%83ASPAC%E8%AE%A1%E5%88%92%E4%B9%8Bawk%E7%A8%8B%E5%BA%8F%E4%BB%8B%E7%BB%8D.pdf">中研院计算中心ASPAC计划之awk程序介绍.PDF</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[awk调用shell命令的两种方法system与print]]></title>
    <link href="http://andrew-home.ga/blog/2014/04/07/awkdiao-yong-shellming-ling-de-liang-chong-fang-fa-systemyu-print/"/>
    <updated>2014-04-07T22:07:27+08:00</updated>
    <id>http://andrew-home.ga/blog/2014/04/07/awkdiao-yong-shellming-ling-de-liang-chong-fang-fa-systemyu-print</id>
    <content type="html"><![CDATA[<p>awk获取执行shell命令后的结果：
<code>
awk 'BEGIN{
　　i=1;while(i&lt;=5){
　　　　system("date &gt; date.tmp")
　　　　getline &lt; "date.tmp"
　　　　print $1
　　　　system("sleep 2")
　　　　close("date.tmp")
　　　　i++
　　}
}'
</code>
或者
<code>
awk 'BEGIN{
　　i=1;while(i&lt;=5){
　　　　system("date &gt; date.tmp")
　　　　getline a&lt; "date.tmp"
　　　　print a
　　　　system("sleep 2")
　　　　close("date.tmp")
　　　　i++
　　}
}'
</code>
或者
<code>
awk 'BEGIN{
　　i=1;while(i&lt;=5){
　　　　"date" | getline
　　　　print $1
　　　　system("sleep 2")
　　　　close("date")
　　　　i++
　　}
}'
</code>
注意：close(&ldquo;date.tmp&rdquo;)或close(&ldquo;date&rdquo;)一句必不可少，否则每次循环从管道拿到的都是已经打开的文件或命令的数据</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[awk 读取 shell 变量的方法]]></title>
    <link href="http://andrew-home.ga/blog/2014/04/07/awk-du-qu-shell-bian-liang-de-fang-fa/"/>
    <updated>2014-04-07T22:02:41+08:00</updated>
    <id>http://andrew-home.ga/blog/2014/04/07/awk-du-qu-shell-bian-liang-de-fang-fa</id>
    <content type="html"><![CDATA[<ol>
<li><p>在awk中用"&lsquo;$var&rsquo;"</p>

<pre><code> #!/bin/bash

 var=test
 awk 'BEGIN { print "'$var'" }' 
</code></pre>

<p> 如果var有空格、转义字符等特殊字符，最好在$var外再用一个双引号括住： <code>"'"$var"'"</code></p></li>
<li><p>awk -v awk中的变量名= shell中的变量名</p>

<pre><code> #!/bin/bash

 varS=test
 awk -v varA="$varS"  'BEGIN { print  varA}' 
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[awk数字比较]]></title>
    <link href="http://andrew-home.ga/blog/2014/04/07/awkshu-zi-bi-jiao/"/>
    <updated>2014-04-07T21:57:27+08:00</updated>
    <id>http://andrew-home.ga/blog/2014/04/07/awkshu-zi-bi-jiao</id>
    <content type="html"><![CDATA[<h1>自动转换</h1>

<p>awk中的变量是数字还是字符串会根据上下文转换，如：
```sh linenos:true
$vi test.sh</p>

<h1>!/bin/bash</h1>

<p>aS=$1
bS=$2</p>

<p>awk &lsquo;BEGIN {</p>

<pre><code>aA="'$aS'"
bA="'$bS'"
if (aA&gt;bA) { print  aA+bA "bigger" }
</code></pre>

<p>}&lsquo;
```</p>

<p>在命令行输入<code>test.sh 4 100</code>,会显示：</p>

<pre><code>104  bigger
</code></pre>

<p>原因是计算四则运算时，awk将其转换为数字，但比较时转换为字符串比较了</p>

<h1>解决方法</h1>

<p>变量需要转换为数字使用时，手动加0：</p>

<p>```sh linenos:true</p>

<h1>!/bin/bash</h1>

<p>aS=$1
bS=$2</p>

<p>awk &lsquo;BEGIN {</p>

<pre><code>aA="'$aS'"+0
bA="'$bS'"+0
if (aA&gt;bA) { print  aA+bA "bigger" }
</code></pre>

<p>}&lsquo;
```</p>

<p>直接比较改为变量相减后的结果与0比较：</p>

<p>```sh linenos:true</p>

<h1>!/bin/bash</h1>

<p>aS=$1
bS=$2</p>

<p>awk &lsquo;BEGIN {</p>

<pre><code>aA="'$aS'"
bA="'$bS'"
if (aA-bA&gt;0) { print  aA+bA "bigger" }
</code></pre>

<p>}&lsquo;
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[awk数组]]></title>
    <link href="http://andrew-home.ga/blog/2014/04/07/awkshu-zu/"/>
    <updated>2014-04-07T21:55:22+08:00</updated>
    <id>http://andrew-home.ga/blog/2014/04/07/awkshu-zu</id>
    <content type="html"><![CDATA[<p>1.采用 for (val in Array) print Array[val] 的方法得到的遍历是无序的，即使下标val是1、2、3&hellip;.</p>

<p>2.获得数组个数的方法</p>

<p>split:</p>

<pre><code>n=split(原字符串, 数组名, 分隔字符) print n
</code></pre>

<p>asort(排序）:</p>

<pre><code>n=print asort(Array)
</code></pre>

<p>length:</p>

<pre><code>n=length(Array)
</code></pre>
]]></content>
  </entry>
  
</feed>
