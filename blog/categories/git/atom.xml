<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | Andrew's Blog]]></title>
  <link href="http://andrew-home.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://andrew-home.github.io/"/>
  <updated>2014-04-07T00:17:05+08:00</updated>
  <id>http://andrew-home.github.io/</id>
  <author>
    <name><![CDATA[Andrew]]></name>
    <email><![CDATA[gzdujunchao@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用git subtree 管理博客主题]]></title>
    <link href="http://andrew-home.github.io/blog/2014/02/15/shi-yong-git-subtree-guan-li-bo-ke-zhu-ti/"/>
    <updated>2014-02-15T16:32:31+08:00</updated>
    <id>http://andrew-home.github.io/blog/2014/02/15/shi-yong-git-subtree-guan-li-bo-ke-zhu-ti</id>
    <content type="html"><![CDATA[<h1>背景</h1>

<p>以下是本博客源码的目录结构</p>

<p><code>plain blog-source mark:14-15
blog-source
├── CHANGELOG.markdown
├── Gemfile
├── Gemfile.lock
├── README.markdown
├── README.md
├── Rakefile
├── _config.yml
├── _deploy
├── config.rb
├── config.ru
├── plugins
├── public
├── sass -&gt; theme/sass
├── source -&gt; theme/source
└── theme
</code>
theme 是另外一个repo，用于维护博客样式的变更，采用subtree的形式包含在blog-source这个repo里。在第一次添加theme子目录时，用的命令如下：</p>

<p><code>mark:3
语法：git remote add -f &lt;子仓库名&gt; &lt;子仓库地址&gt;
解释：其中-f意思是在添加远程仓库之后，立即执行fetch。
git remote add -f theme git@github.com:andrew-home/octopress-theme.git
</code></p>

<p><code>mark:3
语法：git subtree add --prefix=&lt;子目录名&gt; &lt;子仓库名&gt; &lt;分支&gt; --squash
解释：--squash意思是把subtree的改动合并成一次commit，这样就不用拉取子项目完整的历史记录。--prefix之后的=等号也可以用空格。
git subtree add --prefix=theme theme fortheme --squash
</code></p>

<h1>样式更新</h1>

<p>由于文章目录是位于source之下，而source又属于主题，为了不让主题这个repo不含有文章目录，所以新建了个fortheme分支，这个分支的source目录下是不含有_posts目录的。</p>

<p>更新样式时，先切换到fortheme分支，修改完theme目录下代码之后，再切换到master分支（因为fortheme分支没有文章目录，看不到效果），在master分支下review完效果后，再切换回fortheme分支，git commit提交，然后用以下命令push提交到远程</p>

<p><code>mark:2
语法：git subtree push --prefix=&lt;子目录名&gt; &lt;远程分支名&gt; 分支
git subtree push --prefix=theme theme master
</code></p>

<p>最后切换回master分支，用以下命令合并修改、提交
<code>
git merge fortheme --squash
git push origin master
</code></p>

<h1>octopress 代码更新</h1>

<p>如果有人修改了octopress的代码，提交了pull request，比如以下这个：
<a href="https://github.com/imathis/octopress/pull/1485">https://github.com/imathis/octopress/pull/1485</a></p>

<p>此修改使得octopress 2.0(master)版本也能用上代码渲染时的linenos，start，mark选项。</p>

<p>使用这种pull request，是把它check out到本地的一个新分支，然后再merge到master实现。
首先将.git/config里的octobpress源取消注释
<code>
[remote "octopress"]
   url = git://github.com/imathis/octopress.git
   fetch = +refs/heads/*:refs/remotes/origin/*
</code></p>

<p>然后fetch这个pr
<code>mark:2
语法：git fetch &lt;远程仓库名&gt; refs/pull/&lt;pull request序号&gt;/head:&lt;本地分支名&gt;
git fetch octopress refs/pull/1485/head:update
</code>
上述命令会在本地新建一个分支来保存pr的代码，然后就可以merge到master来应用pr了。</p>
]]></content>
  </entry>
  
</feed>
